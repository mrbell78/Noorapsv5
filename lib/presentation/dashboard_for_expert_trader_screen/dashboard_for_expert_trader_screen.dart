import '../dashboard_for_expert_trader_screen/widgets/revenuedetails_item_widget.dart';import '../dashboard_for_expert_trader_screen/widgets/totalassettext1_item_widget.dart';import 'package:flutter/material.dart';import 'package:nurhossen_s_application5/core/app_export.dart';import 'package:nurhossen_s_application5/presentation/set_order_with_single_page/set_order_with_single_page.dart';import 'package:nurhossen_s_application5/widgets/app_bar/appbar_leading_image.dart';import 'package:nurhossen_s_application5/widgets/app_bar/appbar_subtitle.dart';import 'package:nurhossen_s_application5/widgets/app_bar/custom_app_bar.dart';import 'package:nurhossen_s_application5/widgets/custom_bottom_bar.dart';
// ignore_for_file: must_be_immutable
class DashboardForExpertTraderScreen extends StatelessWidget {DashboardForExpertTraderScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(appBar: _buildAppBar(context), body: SizedBox(width: double.maxFinite, child: Column(children: [SizedBox(height: 20.v), Expanded(child: SingleChildScrollView(child: Padding(padding: EdgeInsets.only(left: 21.h, right: 21.h, bottom: 5.v), child: Column(children: [_buildTotalAsset(context), SizedBox(height: 20.v), _buildTodayTradeCommission(context)]))))])), bottomNavigationBar: _buildBottomBar(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(leadingWidth: 43.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrowLeft, margin: EdgeInsets.only(left: 19.h, top: 27.v, bottom: 22.v), onTap: () {onTapArrowLeft(context);}), title: AppbarSubtitle(text: "Dashboard", margin: EdgeInsets.only(left: 20.h)), styleType: Style.bgShadow); } 
/// Section Widget
Widget _buildTotalAsset(BuildContext context) { return Column(children: [SizedBox(height: 100.v, child: ListView.separated(scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(width: 9.h);}, itemCount: 3, itemBuilder: (context, index) {return Totalassettext1ItemWidget();})), SizedBox(height: 20.v), Container(decoration: AppDecoration.outlineBlack9003.copyWith(borderRadius: BorderRadiusStyle.roundedBorder7), margin: EdgeInsets.symmetric(horizontal: 14.h), child: GridView.builder(shrinkWrap: true, gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(mainAxisExtent: 128.v, crossAxisCount: 3, mainAxisSpacing: 8.h, crossAxisSpacing: 8.h), physics: NeverScrollableScrollPhysics(), itemCount: 6, itemBuilder: (context, index) {return RevenuedetailsItemWidget();}))]); } 
/// Section Widget
Widget _buildUnlockSubscription1(BuildContext context) { return Container(padding: EdgeInsets.symmetric(horizontal: 7.h, vertical: 1.v), decoration: AppDecoration.outlineBlack.copyWith(borderRadius: BorderRadiusStyle.roundedBorder7), child: Column(mainAxisSize: MainAxisSize.min, children: [Padding(padding: EdgeInsets.only(left: 5.h), child: _buildLockSubscription(context, dynamicText: "Unlock Subscription Balance:", dynamicText1: "300")), SizedBox(height: 7.v), Padding(padding: EdgeInsets.only(left: 5.h), child: _buildLockSubscription(context, dynamicText: "Lock Subscription Balance:", dynamicText1: "200")), SizedBox(height: 7.v), Padding(padding: EdgeInsets.only(left: 5.h, right: 10.h), child: _buildLastMonthSubscriptionIncome(context, lastMonthSubscriptionIncome: "Today Subscription Income:", price: "50")), SizedBox(height: 7.v), Padding(padding: EdgeInsets.only(left: 5.h, right: 10.h), child: _buildLastMonthSubscriptionIncome(context, lastMonthSubscriptionIncome: "Last Month Subscription Income:", price: "50")), SizedBox(height: 7.v), Padding(padding: EdgeInsets.only(left: 5.h, right: 10.h), child: _buildLastMonthSubscriptionIncome(context, lastMonthSubscriptionIncome: "A Year Subscription Income:", price: "50")), SizedBox(height: 7.v), Padding(padding: EdgeInsets.only(left: 5.h, right: 3.h), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: EdgeInsets.only(top: 1.v), child: Text("Total Subscription Income:", style: theme.textTheme.titleMedium)), Text("150", style: theme.textTheme.titleMedium)]))])); } 
/// Section Widget
Widget _buildTodayTradeCommission(BuildContext context) { return Column(children: [_buildUnlockSubscription1(context), SizedBox(height: 21.v), Container(padding: EdgeInsets.symmetric(horizontal: 13.h, vertical: 15.v), decoration: AppDecoration.outlineBlack.copyWith(borderRadius: BorderRadiusStyle.roundedBorder7), child: Column(mainAxisSize: MainAxisSize.min, children: [Padding(padding: EdgeInsets.only(right: 3.h), child: Column(children: [Padding(padding: EdgeInsets.only(right: 6.h), child: _buildLastMonthTrade(context, lastMonthTradeText: "Today Trade commission:", priceText: "50")), SizedBox(height: 6.v), Padding(padding: EdgeInsets.only(right: 6.h), child: _buildLastMonthTrade(context, lastMonthTradeText: "Last Month Trade commission:", priceText: "50"))])), SizedBox(height: 8.v), Padding(padding: EdgeInsets.only(right: 9.h), child: _buildLastMonthTrade(context, lastMonthTradeText: "A year Trade commission:", priceText: "50")), SizedBox(height: 5.v), Padding(padding: EdgeInsets.only(right: 3.h), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text("Total Trade commission:", style: theme.textTheme.titleMedium), Text("150", style: theme.textTheme.titleMedium)]))]))]); } 
/// Section Widget
Widget _buildBottomBar(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
/// Common widget
Widget _buildLockSubscription(BuildContext context, {required String dynamicText, required String dynamicText1, }) { return Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: EdgeInsets.only(top: 1.v), child: Text(dynamicText, style: theme.textTheme.titleMedium!.copyWith(color: appTheme.black900))), Text(dynamicText1, style: CustomTextStyles.titleMediumOnPrimaryContainer.copyWith(color: theme.colorScheme.onPrimaryContainer))]); } 
/// Common widget
Widget _buildLastMonthSubscriptionIncome(BuildContext context, {required String lastMonthSubscriptionIncome, required String price, }) { return Row(mainAxisAlignment: MainAxisAlignment.center, children: [Padding(padding: EdgeInsets.only(top: 1.v), child: Text(lastMonthSubscriptionIncome, style: theme.textTheme.bodyLarge!.copyWith(color: appTheme.black900))), Padding(padding: EdgeInsets.only(left: 28.h), child: Text(price, style: theme.textTheme.bodyLarge!.copyWith(color: appTheme.black900)))]); } 
/// Common widget
Widget _buildLastMonthTrade(BuildContext context, {required String lastMonthTradeText, required String priceText, }) { return Row(mainAxisAlignment: MainAxisAlignment.center, children: [Text(lastMonthTradeText, style: theme.textTheme.bodyLarge!.copyWith(color: appTheme.black900)), Padding(padding: EdgeInsets.only(left: 39.h), child: Text(priceText, style: theme.textTheme.bodyLarge!.copyWith(color: appTheme.black900)))]); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Group6: return AppRoutes.setOrderWithSinglePage; case BottomBarEnum.Frameonprimary: return "/"; case BottomBarEnum.User: return "/"; case BottomBarEnum.Group1101: return "/"; case BottomBarEnum.Group9: return "/"; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(String currentRoute) { switch (currentRoute) {case AppRoutes.setOrderWithSinglePage: return SetOrderWithSinglePage(); default: return DefaultWidget();} } 

/// Navigates back to the previous screen.
onTapArrowLeft(BuildContext context) { Navigator.pop(context); } 
 }
